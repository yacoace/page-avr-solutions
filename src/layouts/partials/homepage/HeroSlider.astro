---
import { getLangFromUrl, slugSelector } from "@/lib/utils/languageParser";
import { markdownify } from "@/lib/utils/textConverter";

const { heroSlider } = Astro.props;
let lang = getLangFromUrl(Astro.url);
---

{
  heroSlider?.enable && (
    <section class="section pt-0">
      <div class="swiper banner-slider relative">
        <div class="swiper-wrapper">
          {heroSlider.slider_item.map(
            (slider: {
              bg_image: string;
              subtitle: string;
              title: string;
              content: string;
              button: { enable: boolean; label: string; link: string };
            }) => (
              <div class="swiper-slide relative">
                <div class="relative h-[720px]">
                  <div
                    class="absolute inset-0 bg-cover bg-center"
                    style={{
                      backgroundImage: `url(${slider.bg_image})`,
                    }}
                  />
                  {/* <div class="absolute inset-0 bg-gradient-to-l from-[#00000040] to-[#00000050] z-10" /> */}
                  <div class="container 2xl:container-lg relative z-20 h-full flex flex-col justify-center items-start text-dark/80">
                    <p
                      class="mb-2 lg:mb-4 font-semibold lg:text-xl text-dark rounded-full inline-block uppercase"
                      set:html={markdownify(slider.subtitle ?? "")}
                    />
                    <h1
                      class="mb-6 md:text-7xl uppercase font-semibold"
                      set:html={markdownify(slider.title ?? "")}
                    />
                    <p
                      class="mb-5 lg:mb-9 lg:text-xl xl:max-w-[700px] leading-5 text-balance"
                      set:html={markdownify(slider.content ?? "")}
                    />
                    {slider.button && slider.button.enable && (
                      <a
                        class="btn btn-outline-primary"
                        href={slugSelector(slider.button.link, lang)}
                      >
                        <span>{slider.button.label}</span>
                      </a>
                    )}
                  </div>
                </div>
              </div>
            ),
          )}
        </div>

        {/* Navigation buttons  */}
        <div class="swiper-button-next" />
        <div class="swiper-button-prev" />
      </div>
    </section>
  )
}

<script>
  import { Swiper } from "swiper";
  import "swiper/css";
  import "swiper/css/navigation";
  import "swiper/css/pagination";
  import { Autoplay, Navigation, Pagination } from "swiper/modules";

  // astro:page-load event is fired when the page is loaded
  document.addEventListener("astro:page-load", () => {
    new Swiper(".banner-slider", {
      modules: [Autoplay, Pagination, Navigation],
      loop: true,
      centeredSlides: true,
      slidesPerView: 1,
      autoplay: {
        delay: 2500,
        disableOnInteraction: false,
      },
      navigation: {
        nextEl: ".swiper-button-next",
        prevEl: ".swiper-button-prev",
      },
    });
  });
</script>

<style>
  /* Initial hidden state for navigation buttons */
  .swiper-button-next,
  .swiper-button-prev {
    @apply max-lg:hidden;
    transition: transform 0.3s ease-in-out;
    position: absolute;
  }

  /* Position the buttons off the screen */
  .swiper-button-next {
    transform: translateX(150px);
    right: 60px;
  }

  .swiper-button-prev {
    transform: translateX(-150px);
    left: 60px;
  }

  /* On hover, bring the buttons into view */
  .banner-slider:hover .swiper-button-next,
  .banner-slider:hover .swiper-button-prev {
    transform: translateX(0);
  }

  .swiper-button-next:after,
  .swiper-rtl .swiper-button-prev:after {
    @apply bg-primary/50 rounded-full p-8 content-[""] bg-no-repeat bg-center;
    background-image: url("data:image/svg+xml,%3Csvg stroke='%23ffffff' fill='%23ffffff' stroke-width='0' viewBox='0 0 16 16' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath fill-rule='evenodd' d='M10.146 4.646a.5.5 0 01.708 0l3 3a.5.5 0 010 .708l-3 3a.5.5 0 01-.708-.708L12.793 8l-2.647-2.646a.5.5 0 010-.708z' clip-rule='evenodd'%3E%3C/path%3E%3Cpath fill-rule='evenodd' d='M2 8a.5.5 0 01.5-.5H13a.5.5 0 010 1H2.5A.5.5 0 012 8z' clip-rule='evenodd'%3E%3C/path%3E%3C/svg%3E");
    background-size: 1em;
  }

  .swiper-button-prev:after,
  .swiper-rtl .swiper-button-prev:after {
    @apply bg-primary/50 rounded-full p-8 content-[""] bg-no-repeat bg-center;
    background-image: url("data:image/svg+xml,%3Csvg stroke='%23ffffff' fill='%23ffffff' stroke-width='0' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath fill-rule='evenodd' d='M5.854 4.646a.5.5 0 010 .708L3.207 8l2.647 2.646a.5.5 0 01-.708.708l-3-3a.5.5 0 010-.708l3-3a.5.5 0 01.708 0z' clip-rule='evenodd'%3E%3C/path%3E%3Cpath fill-rule='evenodd' d='M2.5 8a.5.5 0 01.5-.5h10.5a.5.5 0 010 1H3a.5.5 0 01-.5-.5z' clip-rule='evenodd'%3E%3C/path%3E%3C/svg%3E");
    background-size: 1em;
  }
</style>
