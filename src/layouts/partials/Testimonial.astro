---
import ImageMod from "@/components/ImageMod.astro";
import { markdownify } from "@/lib/utils/textConverter";
import { FaQuoteLeft } from "react-icons/fa";
const { testimonial } = Astro.props;
---

{
  testimonial.enable && (
    <section class="section bg-[#f5f6fa] bg-dots">
      <div class="container slider-outside">
        <div class="row">
          <div class="col-12 text-center relative">
            <span class="section-title-border border-center" />
            <p class="h5" set:html={markdownify(testimonial.subtitle)} />
            <h2 class="h1 mb-10" set:html={markdownify(testimonial.title)} />
          </div>
          <div class="col-10 mx-auto">
            <div class="swiper testimonial-slider">
              <div class="swiper-wrapper">
                {testimonial.testimonials.map(
                  (t: {
                    avatar: string;
                    content: string;
                    name: string;
                    designation: string;
                  }) => (
                    //  slider-item
                    <div class="swiper-slide slider-item">
                      <div class="text-center flex flex-col items-center">
                        <ImageMod
                          class="rounded-full mb-5 w-[70px] h-[70px]"
                          src={t.avatar}
                          alt="client"
                          width={70}
                          height={70}
                          format="webp"
                        />
                        <div class="relative">
                          <div
                            class="text-center md:pt-4"
                            data-dot-image="/images/testimonial/client-2.jpg"
                          >
                            <p
                              class="italic mb-6 text-dark"
                              set:html={markdownify(t.content)}
                            />
                            <FaQuoteLeft className="text-primary/30 absolute top-0 left-1/2 text-[100px] -translate-x-[50px]" />
                            <h4
                              class="mb-2 h5"
                              set:html={markdownify(t.name)}
                            />
                            <span
                              class="text-primary"
                              set:html={markdownify(t.designation)}
                            />
                          </div>
                        </div>
                      </div>
                    </div>
                  ),
                )}
              </div>
            </div>
          </div>
        </div>

        {/* Navigation buttons */}
        <div class="mt-10">
          <div class="swiper-button-next" />
          <div class="swiper-button-prev" />
        </div>
      </div>
    </section>
  )
}

<script>
  import { Swiper } from "swiper";
  import "swiper/css";
  import "swiper/css/navigation";
  import "swiper/css/pagination";
  import { Autoplay, Navigation, Pagination } from "swiper/modules";

  // astro:page-load event is fired when the page is loaded
  document.addEventListener("astro:page-load", () => {
    new Swiper(".testimonial-slider", {
      modules: [Autoplay, Pagination, Navigation],
      loop: true,
      centeredSlides: true,
      slidesPerView: 1,
      autoplay: {
        delay: 2500,
        disableOnInteraction: false,
      },
      navigation: {
        nextEl: ".swiper-button-next",
        prevEl: ".swiper-button-prev",
      },
    });
  });
</script>

<style>
  .swiper-button-next,
  .swiper-button-prev {
    transition:
      transform 0.3s ease-in-out,
      opacity 0.3s ease-in-out;
    position: absolute;
    opacity: 0;
  }

  .swiper-button-next {
    transform: translateX(50px);
    right: 160px;
  }

  .swiper-button-prev {
    transform: translateX(-50px);
    left: 160px;
  }

  .swiper-slide {
    position: relative;
  }

  .slider-outside:hover .swiper-button-next,
  .slider-outside:hover .swiper-button-prev {
    opacity: 1;
  }

  .slider-outside:hover .swiper-button-next {
    transform: translateX(100px);
  }

  .slider-outside:hover .swiper-button-prev {
    transform: translateX(-100px);
  }

  .swiper-button-next:after,
  .swiper-rtl .swiper-button-prev:after {
    @apply bg-primary/50 rounded-full p-8 content-[""] bg-no-repeat bg-center;
    background-image: url("data:image/svg+xml,%3Csvg stroke='%23ffffff' fill='%23ffffff' stroke-width='0' viewBox='0 0 16 16' height='1em' width='1em' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath fill-rule='evenodd' d='M10.146 4.646a.5.5 0 01.708 0l3 3a.5.5 0 010 .708l-3 3a.5.5 0 01-.708-.708L12.793 8l-2.647-2.646a.5.5 0 010-.708z' clip-rule='evenodd'%3E%3C/path%3E%3Cpath fill-rule='evenodd' d='M2 8a.5.5 0 01.5-.5H13a.5.5 0 010 1H2.5A.5.5 0 012 8z' clip-rule='evenodd'%3E%3C/path%3E%3C/svg%3E");
    background-size: 1em;
  }

  .swiper-button-prev:after,
  .swiper-rtl .swiper-button-prev:after {
    @apply bg-primary/50 rounded-full p-8 content-[""] bg-no-repeat bg-center;
    background-image: url("data:image/svg+xml,%3Csvg stroke='%23ffffff' fill='%23ffffff' stroke-width='0' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath fill-rule='evenodd' d='M5.854 4.646a.5.5 0 010 .708L3.207 8l2.647 2.646a.5.5 0 01-.708.708l-3-3a.5.5 0 010-.708l3-3a.5.5 0 01.708 0z' clip-rule='evenodd'%3E%3C/path%3E%3Cpath fill-rule='evenodd' d='M2.5 8a.5.5 0 01.5-.5h10.5a.5.5 0 010 1H3a.5.5 0 01-.5-.5z' clip-rule='evenodd'%3E%3C/path%3E%3C/svg%3E");
    background-size: 1em;
  }
</style>
